[tool.poetry]
name = "async-tensorart"
description = "Asyncio wrapper for TensorArt API"
version = "0.2.1"
authors = ["andrew000"]
keywords = [
    "api",
    "framework",
    "wrapper",
    "asyncio",
    "tensorart",
]
readme = "README.md"
license = "MIT"
packages = [
    { include = "async_tensorart" },
]

[tool.poetry.urls]
homepage = "https://github.com/andrew000/AsyncTensorArt"
"Bug Tracker" = "https://github.com/andrew000/AsyncTensorArt/issues"
repository = "https://github.com/andrew000/AsyncTensorArt"

[tool.poetry.dependencies]
python = ">=3.10"
cryptography = ">=41.0,<44"
msgspec = "^0.18"
aiohttp = ">=3.8,<4"

[tool.poetry.group.test.dependencies]
pytest = "^8.3"
pytest-asyncio = "^0.23"

[tool.poetry.group.dev.dependencies]
black = "^24.8"
ruff = "^0.6"
isort = "^5.13"
mypy = "^1.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.mypy]
packages = ["async_tensorart"]
exclude = [
    "\\.?venv",
    "\\.idea",
    "\\.tests?",
]

[tool.pytest.ini_options]
testpaths = "tests"

[tool.ruff]
src = ["async_tensorart", "examples", "tests"]
target-version = "py310"
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    ".dist",
    "node_modules",
    "venv",
    ".venv",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A003",
    "ANN002", "ANN003", "ANN101", "ANN102", "ANN401",
    "COM812",
    "C901",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D205", "D212",
    "DTZ003",
    "ERA001",
    "F841",
    "FA100", "FA102",
    "FBT001", "FBT002",
    "FIX002",
    "INP001", "ISC001",
    "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR5501",
    "PLW0120",
    "RUF",
    "S101", "S311",
    "TD002", "TD003"
]

[tool.isort]
py_version = 312
src_paths = ["async_tensorart", "examples", "tests"]
line_length = 88
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = true
split_on_trailing_comma = false
single_line_exclusions = ["."]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["async_tensorart"]
